[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "astro-provider-databricks"
dynamic = ["version"]
description = "Affordable Databricks Workflows in Apache Airflow"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.7"
packages = [{include = "astro_databricks", from = "src"}]

authors = [
    { name = "Astronomer", email = "humans@astronomer.io" },
]
keywords = [
    "airflow",
    "apache-airflow",
    "astronomer",
    "dags",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Apache Airflow",
    "Framework :: Apache Airflow :: Provider",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]
dependencies = [
    "apache-airflow>=2.2.4",
    "databricks-sql-connector>=2.0.4;python_version>='3.10'",
    "databricks-cli>=0.17.7",
    "apache-airflow-providers-databricks>=2.2.0",
    "mergedeep",
    "pydantic>=1.10.0,<2.0.0", # Airflow & Pydantic issue: https://github.com/apache/airflow/issues/32311
]

[project.optional-dependencies]
docs =[
    "pydata_sphinx_theme",
    "sphinx",
    "sphinx-autobuild",
    "sphinx-tabs"
]
tests = [
    "pytest>=6.0",
    "pytest-split",
    "pytest-dotenv",
    "requests-mock",
    "pytest-cov",
    "pytest-describe",
    "types-requests",
    "mypy",
    "sqlalchemy-stubs", # Change when sqlalchemy is upgraded https://docs.sqlalchemy.org/en/14/orm/extensions/mypy.html
]

[project.urls]
Homepage = "https://github.com/astronomer/astro-provider-databricks/"
Documentation = "https://github.com/astronomer/astro-provider-databricks/"

[tool.hatch.version]
path = "src/astro_databricks/__init__.py"

[tool.hatch.envs.test]
dependencies = [
    "pytest",
    "pytest-cov",
]

[tool.hatch.envs.docs]
dependencies = [
    "sphinx",
    "sphinx-autobuild",
    "sphinx-tabs"
]
[tool.hatch.envs.docs.scripts]
build = "sphinx-build -b html docs docs/_build"
serve = "sphinx-autobuild docs docs/_build"

[tool.hatch.build]
sources = ["src"]

[tool.hatch.build.targets.wheel]
include = [
  "/src/astro_databricks",
]

[tool.mypy]
strict = true


[tool.distutils.bdist_wheel]
universal = true


[tool.black]
target-version = ['py37']
fix = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov=src --cov-branch --cov-report term-missing"
testpaths = [
    "tests",
]


[tool.pydocstyle]
inherit = false
add_ignore = "D100,D104,D105,D107,D205,D400,D401"
convention = "pep257"

[tool.ruff]
line-length = 120

# Enable Pyflakes `E` and `F` codes by default.
extend-select = [
    "W", # pycodestyle warnings
    "I", # isort
    "C90", # Complexity
    #    "B",    # flake8-bugbear
    "C", # flake8-comprehensions
    #    "ANN",  # flake8-comprehensions
    "ISC", # flake8-implicit-str-concat
    "T10", # flake8-debugger
    "A", # flake8-builtins
    "UP", # pyupgrade
]

# Remove this in future
extend-ignore = ["A002", "C901", "E402", "E501", "ISC001", "ISC003", "UP030"]

# Exclude a variety of commonly ignored directories.
extend-exclude = [
    "__pycache__",
    "docs/conf.py",
]

target-version = "py37"
fix = true

[tool.ruff.mccabe]
max-complexity = 6

[tool.ruff.isort]
combine-as-imports = true
known-first-party = ["tests"]

[project.entry-points."airflow.plugins"]
my_plugin = "astro_databricks.plugins.plugin:AstroDatabricksPlugin"
